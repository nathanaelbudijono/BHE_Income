<div class="relative" id="accountMenu">
    <button id="accountMenuTrigger"
            class="w-full flex items-center justify-between gap-3 p-2 rounded-lg hover:bg-neutral-accent-100 transition-colors duration-200 focus:outline-none focus:ring-1 focus:ring-primary-100">
        <img src="~/images/pp.webp" class="flex items-center justify-center w-8 h-8 rounded-lg" />
        <div class="flex-1 text-left flex flex-col">
            <Typography color="dark" id="accountName" variant="sm" font="medium" class="truncate"></Typography>
            <Typography font="light" variant="sm" id="accountEmail" class="truncate"></Typography>
        </div>
    </button>

    <div id="accountDropdownMenu"
         class="absolute bottom-full right-0 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 min-w-56 hidden"
         style="transform:translateY(-8px)">
        <div class="px-3 py-2 text-xs text-muted-foreground font-medium border-b border-gray-100">
            <Typography variant="sm" color="dark">Account</Typography>
        </div>

        <div class="py-1">
            <button class="w-full flex items-center gap-2 px-3 py-2 text-sm hover:bg-neutral-accent-200 transition-colors" onclick="redirectAccountMenu()">
                <i class="ri-verified-badge-line"></i>
                <Typography variant="sm" font="medium" color="dark">Account Settings</Typography>
            </button>
        </div>

        <div class="border-t border-gray-100"></div>
        <div class="py-1">

            <div x-data="{ modalOpen: false }"
                 @@keydown.escape.window="modalOpen = false"
                 class="relative z-50 w-auto h-auto">
                <button @@click="modalOpen=true" class="w-full flex items-center gap-2 px-3 py-2 text-sm hover:bg-neutral-accent-200 transition-colors">
                    <i class="ri-logout-box-r-line"></i>
                    <Typography variant="sm" font="medium" color="dark">Log out</Typography>
                </button>
                <template x-teleport="body">
                    <div x-show="modalOpen" class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen" x-cloak>
                        <div x-show="modalOpen"
                             x-transition:enter="ease-out duration-300"
                             x-transition:enter-start="opacity-0"
                             x-transition:enter-end="opacity-100"
                             x-transition:leave="ease-in duration-300"
                             x-transition:leave-start="opacity-100"
                             x-transition:leave-end="opacity-0"
                             @@click="modalOpen=false" class="absolute inset-0 w-full h-full bg-black/40"></div>
                        <div x-show="modalOpen"
                             x-trap.inert.noscroll="modalOpen"
                             x-transition:enter="ease-out duration-300"
                             x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                             x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
                             x-transition:leave="ease-in duration-200"
                             x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
                             x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                             class="relative px-7 py-6 w-full bg-white sm:max-w-lg sm:rounded-lg">
                            <div class="flex justify-between items-center pb-2">
                                <Typography font="medium" color="dark">Are you sure you want to log out?</Typography>
                            </div>
                            <div class="relative w-auto">
                                <Typography>You will be required to re-enter your credentials to continue your journey</Typography>
                                <div class="flex justify-end">
                                    <button class="neutral-btn">No</button>
                                    <button class="destructive-btn" onclick="handleLogout()">Logout</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </template>
            </div>


        </div>
    </div>
</div>

<script>
    const accountMenuManager = {
        dom: {
            trigger: null,
            dropdown: null,
            accountName:null,
            accountEmail:null
        },
        setUpEventListeners() {
            this.dom.trigger.addEventListener('click', () => {
                this.dom.dropdown.classList.toggle('hidden');
            });

            document.addEventListener('click', (e) => {
                if (!this.dom.trigger.contains(e.target) && !this.dom.dropdown.contains(e.target)) {
                    this.dom.dropdown.classList.add('hidden');
                }
            });

            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    this.dom.dropdown.classList.add('hidden');
                }
            });
        },
        setDisplayName(){
           const data = localStorage.getItem("user-info");
           const userInfo = JSON.parse(data);

           this.dom.accountName.innerText = userInfo.userName;
           this.dom.accountEmail.innerText= userInfo.email;
        },
        init() {
            this.dom.trigger = document.getElementById('accountMenuTrigger');
            this.dom.dropdown = document.getElementById('accountDropdownMenu');
            this.dom.accountName = document.getElementById('accountName');
            this.dom.accountEmail =  document.getElementById('accountEmail');

            if (this.dom.trigger && this.dom.dropdown) {
                this.setUpEventListeners();
            } else {
                console.error("accountMenuManager: Missing trigger or dropdown element.");
            }

            this.setDisplayName();
        }
    };

    const redirectAccountMenu = () =>{
    window.location.href=`${BASE_URL}/accountsettings/myaccount`
    }

    const handleLogout = () => {
        localStorage.removeItem("user-info");
        localStorage.removeItem("stamp-token");
        document.cookie = "stamp-token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC; Secure; SameSite=Lax";
        window.location.href = BASE_URL;
    };
    document.addEventListener('DOMContentLoaded', () => {
        accountMenuManager.init();
    });
</script>
